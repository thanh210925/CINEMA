@model IEnumerable<CINEMA.Models.Room>

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Qu·∫£n l√Ω ph√≤ng chi·∫øu";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary mb-0">@ViewData["Title"]</h2>
        <a class="btn btn-success shadow-sm" href="/Room/Create">
            <i class="bi bi-plus-circle"></i> Th√™m ph√≤ng chi·∫øu m·ªõi
        </a>
    </div>

    <!-- B·ªô l·ªçc lo·∫°i ph√≤ng -->
    <div class="mb-3 d-flex align-items-center gap-2">
        <label for="filterRoomType" class="fw-semibold">L·ªçc theo lo·∫°i ph√≤ng:</label>
        <select id="filterRoomType" class="form-select" style="width:200px;">
            <option value="all">T·∫•t c·∫£</option>
            <option value="VIP">VIP</option>
            <option value="IMAX">IMAX</option>
            <option value="2D">2D</option>
            <option value="3D">3D</option>
            <option value="4DX">4DX</option>
        </select>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-body">
            <table id="roomTable" class="table table-hover align-middle text-center">
                <thead class="table-primary">
                    <tr>
                        <th>ID</th>
                        <th>T√™n ph√≤ng chi·∫øu</th>
                        <th>S·ª©c ch·ª©a</th>
                        <th>Lo·∫°i ph√≤ng chi·∫øu</th>
                        <th>H√†nh ƒë·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Any())
                    {
                        <tr>
                            <td colspan="5" class="text-muted">Ch∆∞a c√≥ ph√≤ng chi·∫øu n√†o ü•≤</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var room in Model)
                        {
                            <tr data-type="@room.Type">
                                <td><span class="badge bg-secondary">@room.RoomId</span></td>
                                <td class="fw-semibold">@room.Name</td>
                                <td>@room.Capacity ng∆∞·ªùi</td>
                                <td>
                                    @if (room.Type?.ToLower().Contains("vip") == true)
                                    {
                                        <span class="badge bg-danger">VIP</span>
                                    }
                                    else if (room.Type?.ToLower().Contains("imax") == true)
                                    {
                                        <span class="badge bg-info text-dark">IMAX</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">@room.Type</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                    
                                        <a class="btn btn-sm btn-warning text-white" href="/Room/Edit/@room.RoomId">
                                            <i class="bi bi-pencil-square"></i> S·ª≠a
                                        </a>
                                        <a class="btn btn-sm btn-danger" href="/Room/Delete/@room.RoomId"
                                           onclick="return confirm('B·∫°n ch·∫Øc ch·∫Øn mu·ªën xo√° ph√≤ng n√†y ch·ª©? üò¢');">
                                            <i class="bi bi-trash"></i> Xo√°
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const filterSelect = document.getElementById("filterRoomType");
        const rows = document.querySelectorAll("#roomTable tbody tr[data-type]");

        filterSelect.addEventListener("change", () => {
            const selected = filterSelect.value.toLowerCase();

            rows.forEach(row => {
                const type = (row.getAttribute("data-type") || "").toLowerCase();
                if (selected === "all" || type.includes(selected)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });
    </script>
}
